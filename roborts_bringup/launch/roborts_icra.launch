<launch>
  <master auto="start"/>
  <arg name="map" value="icra2019"/>
  <arg name="robot_name"/>
  <arg name="initial_pose_x" />
  <arg name="initial_pose_y"/>

  <!-- Run the map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(find roborts_bringup)/maps/$(arg map).yaml" respawn="false" />

  <group ns="$(arg robot_name)">
    <param name="tf_prefix" value="$(arg robot_name)"/>

    <!-- Run the robot sdk interface -->
    <include file="$(find roborts_bringup)/launch/base.launch"/>

    <!-- Publish static tf -->
    <include file="$(find roborts_bringup)/launch/static_tf.launch">
      <arg name="robot_name" value="$(arg robot_name)" />
    </include>

    <!-- Run the lidar node -->
    <node name="rplidar_node" pkg="rplidar_ros" type="rplidarNode">
      <param name="serial_port" type="string" value="/dev/rplidar"/>
      <param name="serial_baudrate" type="int" value="115200"/>
      <param name="frame_id" type="string" value="/$(arg robot_name)/base_laser_link"/>
      <param name="inverted" type="bool" value="false"/>
      <param name="angle_compensate" type="bool" value="true"/>
    </node>

    <!-- Run the camera node -->
    <node name="roborts_camera" pkg="roborts_camera" type="roborts_camera_node" respawn="true"/>

    <node name="roborts_detection" pkg="roborts_detection" type="armor_detection_nodearmor_detection_node" respawn="true"/>

    <rosparam command="load" file="$(find roborts_localization)/config/localization.yaml" />
    <rosparam command="load" file="$(find roborts_localization)/amcl/config/amcl.yaml" />

    <rosparam param="initial_pose_x" subst_value="True">$(arg initial_pose_x)</rosparam>
    <rosparam param="initial_pose_y" subst_value="True">$(arg initial_pose_y)</rosparam>
    <rosparam param="base_frame" subst_value="True">"/$(arg robot_name)/base_link"</rosparam>
    <rosparam param="laser_topic_name" subst_value="True">"/$(arg robot_name)/scan"</rosparam>
    <rosparam param="odom_frame" subst_value="True">"$(arg robot_name)/odom"</rosparam>

    <!-- <rosparam param="odom_frame" subst_value="True">"/$(arg robot_name)/odom"</rosparam> -->
    <rosparam>
            initial_pose_a : 3.14
            global_frame : /map
            map_topic_name : /map
    </rosparam>

    <!-- Run the localization node -->
    <node pkg="roborts_localization" type="localization_node" name="localization_node" respawn="false">
      <remap from="map" to="/map"/>
      <remap from="static_map" to="/static_map"/>
      <param name="global_frame" value="/map" />
      <param name="robot_base_frame" value="/$(arg robot_name)/base_link"/>
    </node>

    <!-- Run the global planner Node -->
    <node pkg="roborts_planning" type="global_planner_node" name="global_planner_node" respawn="false">
      <remap from="map" to="/map"/>
      <remap from="static_map" to="/static_map"/>
    </node>

    <!-- Run the local planner node -->
    <node pkg="roborts_planning" type="local_planner_node" name="local_planner_node" respawn="false">
      <remap from="map" to="/map"/>
      <remap from="static_map" to="/static_map"/>
    </node>

    <!-- Run the velocity converter node -->
    <node pkg="roborts_planning" type="vel_converter" name="vel_converter_node" respawn="false" />

    <node name="decision_tree" pkg="roborts_decision" type="hop_decision_node" respawn="true"/>
  </group>

</launch>

